<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
		
		<!--组件加入容器-->
		<context:component-scan base-package="org.TestSpringhibernate.SpringHibernate_ZH"/>
		<context:property-placeholder location="classpath:db.properties" ignore-resource-not-found="true" ignore-unresolvable="true"/>
		
		<!--第二步：配置hibernate的c3p0连接池-->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="driverClass" value="${mysql.driver}"/>
			<property name="jdbcUrl" value="${mysql.url}"/>
			<property name="user" value="${mysql.username}"/>
			<property name="password" value="${mysql.password}"/>
			
			<!--初始化池中连接数-->
			<!--初始化连接数-->
			<property name="initialPoolSize" value="15"/>
			<!--池内最小的连接数-->
			<property name="minPoolSize" value="1"/>
			<!--连接池能拥有的最大连接量：池内加池外-->
			<property name="maxPoolSize" value="50"/>
			<!--最大空闲时间-->
			<property name="maxIdleTime" value="60"/>
			<!--连接池在无空闲连接可用时一次性创建的新数据库连接数,default : 3-->
			<property name="acquireIncrement" value="5"/>
			<!--池中放置的最大预编译量-->
			<property name="maxStatements" value="200"/>
			<!-- 多次时间检查1次池外的空闲连接 -->
			<property name="idleConnectionTestPeriod" value="30"/>
			<!-- 当连接池中与数据库连接发生异常时，需要重新连接的次数 -->
			<property name="acquireRetryDelay" value="5"/>
			<!-- 在于数据库取得连接之前，发送1条验证语句，用于确认连接可建立 -->
			<property name="preferredTestQuery" value="select now() from dual"/>
		</bean>
		
		
		
		<!--第三步：配置sessionfactory-->
		<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<property name="hibernateProperties">
				<props>
					<!--配置数据库方言-->
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
					<!-- 要求hibernate将拼接好的SQL语句在控制台输出 -->
					<prop key="hibernate.show_sql"></prop>
					<!-- 要求严格按照SQL语法来进行显示 -->
					<prop key="hibernate.format_sql">true</prop>
				</props>
			</property>
			<!--配置自动扫描使用了JPA规范的javaBean,意思实体Bean如果使用了注解-->
			<property name="packagesToScan">
				<list>
					<value>org.TestSpringhibernate.SpringHibernate_ZH.bens</value>
					<!-- <value>org.TestSpringhibernate.SpringHibernate_ZH.bens</value> -->
				</list>
			</property>
			<!--如果没有用JPA规范的javaBean，就配置自动扫描使用xml来完成ORM映射的目录位置-->
	<!--<property name="mappingDirectoryLocations">
     		<list>
     			<value>org/TestSpringhibernate.SpringHibernate_ZH/xmls</value>//这里一定是/加路径
     		</list>
     	</property> -->
		</bean>
		
		
		
		<!--第四步：配置事务管理器  -->
		<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"></property>
		</bean>
		
		
		<!--第五步：采用Spring容器提供的2种事务管理手段来管理事务-->
			<!--第一种：使用在方法上加注解的方式@Transactional-->
			<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
		<!--第二种：声明式事务管理-->
		 <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
        	<!--增-->
            <tx:method name="*" read-only="true"/>
            <tx:method name="save*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="add*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="insert*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="create*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <!--修改-->
            <tx:method name="update*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="change*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="modify*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<!--删除-->
            <tx:method name="delete*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" read-only="false" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <!--查询-->
            <tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="get*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="query*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="select*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="count*" read-only="true" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
		<!--放入切面里面-->
	<aop:config>
        <aop:pointcut id="fooServiceOperation" expression="execution(* org.TestSpringhibernate.SpringHibernate_ZH.*mag.service.impl.*ServiceImpl.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
    </aop:config>
		
		<!--开启切面-->
<!-- 		<aop:aspectj-autoproxy/> -->
</beans>		